{"ast":null,"code":"import React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function CryptoContracts(){const[contractDetails,setContractDetails]=useState([]);useEffect(()=>{// Function to create WebSocket connection\nconst connectWebSocket=()=>{// WebSocket URL\nconst socketURL=\"wss://fawss.pi42.com/socket.io/?EIO=4&transport=websocket\";// Create WebSocket connection\nconst socket=new WebSocket(socketURL);// When the connection is opened\nsocket.onopen=()=>{console.log('WebSocket connection established.');// Send the number 40\nsocket.send(\"40\");};// When a message is received from the server\nsocket.onmessage=event=>{console.log('Message from server:',event.data);// Find the index where the useful data tuple starts\nconst startIndex=event.data.indexOf('[\"allContractDetails\"');if(startIndex!==-1){// Extract the JSON data tuple containing contract details\nconst dataString=event.data.substring(startIndex);try{// Parse the data tuple as JSON\nconst rawData=JSON.parse(dataString);// Update contract details state\nsetContractDetails(rawData);}catch(error){console.error('Error parsing JSON:',error);}}else{console.error('Invalid message format: no contract details found');}};// When an error occurs\nsocket.onerror=error=>{console.error('WebSocket error:',error);};// When the connection is closed\nsocket.onclose=()=>{console.log('WebSocket connection closed.');};};// Connect WebSocket when component mounts\nconnectWebSocket();// Clean up WebSocket connection when component unmounts\nreturn()=>{// Close WebSocket connection\n// Cleanup tasks if any\n};},[]);// Empty dependency array ensures this effect runs only once\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Crytpo\"}),/*#__PURE__*/_jsxs(\"table\",{border:\"1\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Symbol Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Last Price\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Market Price\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Price Change Percent\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Base Asset Volume\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:contractDetails.map((symbolData,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:Object.keys(symbolData)[0]}),/*#__PURE__*/_jsx(\"td\",{children:symbolData[Object.keys(symbolData)[0]].lastPrice||''}),/*#__PURE__*/_jsx(\"td\",{children:symbolData[Object.keys(symbolData)[0]].marketPrice||''}),/*#__PURE__*/_jsx(\"td\",{children:symbolData[Object.keys(symbolData)[0]].priceChangePercent||''}),/*#__PURE__*/_jsx(\"td\",{children:symbolData[Object.keys(symbolData)[0]].baseAssetVolume||''})]},index))})]})]});}export default CryptoContracts;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","CryptoContracts","contractDetails","setContractDetails","connectWebSocket","socketURL","socket","WebSocket","onopen","console","log","send","onmessage","event","data","startIndex","indexOf","dataString","substring","rawData","JSON","parse","error","onerror","onclose","children","border","map","symbolData","index","Object","keys","lastPrice","marketPrice","priceChangePercent","baseAssetVolume"],"sources":["/home/shashwat/pi42/myapp/src/Crypto.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction CryptoContracts() {\n  const [contractDetails, setContractDetails] = useState([]);\n\n  useEffect(() => {\n    // Function to create WebSocket connection\n    const connectWebSocket = () => {\n      // WebSocket URL\n      const socketURL = \"wss://fawss.pi42.com/socket.io/?EIO=4&transport=websocket\";\n\n      // Create WebSocket connection\n      const socket = new WebSocket(socketURL);\n\n      // When the connection is opened\n      socket.onopen = () => {\n        console.log('WebSocket connection established.');\n\n        // Send the number 40\n        socket.send(\"40\");\n      };\n\n      // When a message is received from the server\n      socket.onmessage = (event) => {\n        console.log('Message from server:', event.data);\n\n    // Find the index where the useful data tuple starts\n    const startIndex = event.data.indexOf('[\"allContractDetails\"');\n\n    if (startIndex !== -1) {\n        // Extract the JSON data tuple containing contract details\n        const dataString = event.data.substring(startIndex);\n\n        try {\n            // Parse the data tuple as JSON\n            const rawData = JSON.parse(dataString);\n\n            // Update contract details state\n            setContractDetails(rawData);\n        } catch (error) {\n            console.error('Error parsing JSON:', error);\n        }\n    } else {\n        console.error('Invalid message format: no contract details found');\n    }\n      };\n\n      // When an error occurs\n      socket.onerror = (error) => {\n        console.error('WebSocket error:', error);\n      };\n\n      // When the connection is closed\n      socket.onclose = () => {\n        console.log('WebSocket connection closed.');\n      };\n    };\n\n    // Connect WebSocket when component mounts\n    connectWebSocket();\n\n    // Clean up WebSocket connection when component unmounts\n    return () => {\n      // Close WebSocket connection\n      // Cleanup tasks if any\n    };\n  }, []); // Empty dependency array ensures this effect runs only once\n\n  return (\n    <div>\n      <h1>Crytpo</h1>\n      <table border=\"1\">\n        <thead>\n          <tr>\n            <th>Symbol Name</th>\n            <th>Last Price</th>\n            <th>Market Price</th>\n            <th>Price Change Percent</th>\n            <th>Base Asset Volume</th>\n          </tr>\n        </thead>\n        <tbody>\n          {contractDetails.map((symbolData, index) => (\n            <tr key={index}>\n              <td>{Object.keys(symbolData)[0]}</td>\n              <td>{symbolData[Object.keys(symbolData)[0]].lastPrice || ''}</td>\n              <td>{symbolData[Object.keys(symbolData)[0]].marketPrice || ''}</td>\n              <td>{symbolData[Object.keys(symbolData)[0]].priceChangePercent || ''}</td>\n              <td>{symbolData[Object.keys(symbolData)[0]].baseAssetVolume || ''}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default CryptoContracts;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}