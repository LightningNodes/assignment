{"ast":null,"code":"var _jsxFileName = \"/home/shashwat/pi42/myapp/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport { GoogleAuthProvider, getAuth, signInWithPopup, signOut } from \"firebase/auth\";\nimport './App.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const provider = new GoogleAuthProvider();\n  provider.addScope(\"https://www.googleapis.com/auth/contacts.readonly\");\n  const auth = getAuth();\n  const [authorizedUser, setAuthorizedUser] = useState(false || sessionStorage.getItem(\"accessToken\"));\n  function signIn() {\n    signInWithPopup(auth, provider).then(result => {\n      const credential = GoogleAuthProvider.credentialFromResult(result);\n      const token = credential.accessToken;\n      // The signed-in user info.\n      const user = result.user;\n      if (user) {\n        user.getIdToken().then(tkn => {\n          // set access token in session storage\n          sessionStorage.setItem(\"accessToken\", tkn);\n          setAuthorizedUser(true);\n        });\n      }\n      console.log(user);\n    }).catch(error => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      // The email of the user's account used.\n      const email = error.customData.email;\n      // The AuthCredential type that was used.\n      const credential = GoogleAuthProvider.credentialFromError(error);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: authorizedUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Authorized user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 3\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: signIn,\n        children: \"SignWithGoogle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 3\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/SFkQmtO/hUV3ftCIr2u1ZCHczU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","GoogleAuthProvider","getAuth","signInWithPopup","signOut","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","provider","addScope","auth","authorizedUser","setAuthorizedUser","sessionStorage","getItem","signIn","then","result","credential","credentialFromResult","token","accessToken","user","getIdToken","tkn","setItem","console","log","catch","error","errorCode","code","errorMessage","message","email","customData","credentialFromError","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/shashwat/pi42/myapp/src/App.js"],"sourcesContent":["import logo from './logo.svg';\n\nimport { GoogleAuthProvider, getAuth, signInWithPopup,signOut  } from \"firebase/auth\";\n\nimport './App.css';\nimport {useState} from 'react';\n\nfunction App() {\n  const provider = new GoogleAuthProvider();\n  provider.addScope(\"https://www.googleapis.com/auth/contacts.readonly\");\n  const auth = getAuth();\n  const [authorizedUser,setAuthorizedUser] = useState(false || sessionStorage.getItem(\"accessToken\"));\n\n  function signIn() {\n    signInWithPopup(auth, provider)\n      .then((result) => {\n        const credential = GoogleAuthProvider.credentialFromResult(result);\n        const token = credential.accessToken;\n        // The signed-in user info.\n        const user = result.user;\n        if(user){\n          user.getIdToken().then((tkn)=>{\n            // set access token in session storage\n            sessionStorage.setItem(\"accessToken\", tkn);\n            setAuthorizedUser(true);\n          })}\n          console.log(user);\n      })\n      .catch((error) => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        // The email of the user's account used.\n        const email = error.customData.email;\n        // The AuthCredential type that was used.\n        const credential = GoogleAuthProvider.credentialFromError(error);\n      });\n  }\n  return (\n    <div className=\"App\">\n{authorizedUser ? (\n<><p>Authorized user</p></>\n): (\n<><button onClick={signIn}>SignWithGoogle</button></>)}\n</div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAE7B,SAASC,kBAAkB,EAAEC,OAAO,EAAEC,eAAe,EAACC,OAAO,QAAS,eAAe;AAErF,OAAO,WAAW;AAClB,SAAQC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,QAAQ,GAAG,IAAIX,kBAAkB,CAAC,CAAC;EACzCW,QAAQ,CAACC,QAAQ,CAAC,mDAAmD,CAAC;EACtE,MAAMC,IAAI,GAAGZ,OAAO,CAAC,CAAC;EACtB,MAAM,CAACa,cAAc,EAACC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,KAAK,IAAIY,cAAc,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC;EAEnG,SAASC,MAAMA,CAAA,EAAG;IAChBhB,eAAe,CAACW,IAAI,EAAEF,QAAQ,CAAC,CAC5BQ,IAAI,CAAEC,MAAM,IAAK;MAChB,MAAMC,UAAU,GAAGrB,kBAAkB,CAACsB,oBAAoB,CAACF,MAAM,CAAC;MAClE,MAAMG,KAAK,GAAGF,UAAU,CAACG,WAAW;MACpC;MACA,MAAMC,IAAI,GAAGL,MAAM,CAACK,IAAI;MACxB,IAAGA,IAAI,EAAC;QACNA,IAAI,CAACC,UAAU,CAAC,CAAC,CAACP,IAAI,CAAEQ,GAAG,IAAG;UAC5B;UACAX,cAAc,CAACY,OAAO,CAAC,aAAa,EAAED,GAAG,CAAC;UAC1CZ,iBAAiB,CAAC,IAAI,CAAC;QACzB,CAAC,CAAC;MAAA;MACFc,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;IACrB,CAAC,CAAC,CACDM,KAAK,CAAEC,KAAK,IAAK;MAChB,MAAMC,SAAS,GAAGD,KAAK,CAACE,IAAI;MAC5B,MAAMC,YAAY,GAAGH,KAAK,CAACI,OAAO;MAClC;MACA,MAAMC,KAAK,GAAGL,KAAK,CAACM,UAAU,CAACD,KAAK;MACpC;MACA,MAAMhB,UAAU,GAAGrB,kBAAkB,CAACuC,mBAAmB,CAACP,KAAK,CAAC;IAClE,CAAC,CAAC;EACN;EACA,oBACE1B,OAAA;IAAKkC,SAAS,EAAC,KAAK;IAAAC,QAAA,EACvB3B,cAAc,gBACfR,OAAA,CAAAE,SAAA;MAAAiC,QAAA,eAAEnC,OAAA;QAAAmC,QAAA,EAAG;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC,gBAAE,CAAC,gBAE3BvC,OAAA,CAAAE,SAAA;MAAAiC,QAAA,eAAEnC,OAAA;QAAQwC,OAAO,EAAE5B,MAAO;QAAAuB,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC,gBAAE;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEN;AAACnC,EAAA,CAtCQD,GAAG;AAAAsC,EAAA,GAAHtC,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}